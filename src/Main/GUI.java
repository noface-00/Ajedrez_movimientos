/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;


/**
 *
 * @author mkevi
 */
public class GUI extends javax.swing.JFrame {
    static JButton[][] matrizBotones;
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        inicializarMatrizBotones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Fichas = new javax.swing.JComboBox<>();
        Tablero = new javax.swing.JPanel();
        A8 = new javax.swing.JButton();
        B8 = new javax.swing.JButton();
        C8 = new javax.swing.JButton();
        D8 = new javax.swing.JButton();
        E8 = new javax.swing.JButton();
        F8 = new javax.swing.JButton();
        G8 = new javax.swing.JButton();
        H8 = new javax.swing.JButton();
        A7 = new javax.swing.JButton();
        B7 = new javax.swing.JButton();
        C7 = new javax.swing.JButton();
        D7 = new javax.swing.JButton();
        E7 = new javax.swing.JButton();
        F7 = new javax.swing.JButton();
        G7 = new javax.swing.JButton();
        H7 = new javax.swing.JButton();
        A6 = new javax.swing.JButton();
        B6 = new javax.swing.JButton();
        C6 = new javax.swing.JButton();
        D6 = new javax.swing.JButton();
        E6 = new javax.swing.JButton();
        F6 = new javax.swing.JButton();
        G6 = new javax.swing.JButton();
        H6 = new javax.swing.JButton();
        A5 = new javax.swing.JButton();
        B5 = new javax.swing.JButton();
        C5 = new javax.swing.JButton();
        D5 = new javax.swing.JButton();
        E5 = new javax.swing.JButton();
        F5 = new javax.swing.JButton();
        G5 = new javax.swing.JButton();
        H5 = new javax.swing.JButton();
        A4 = new javax.swing.JButton();
        B4 = new javax.swing.JButton();
        C4 = new javax.swing.JButton();
        D4 = new javax.swing.JButton();
        E4 = new javax.swing.JButton();
        F4 = new javax.swing.JButton();
        G4 = new javax.swing.JButton();
        H4 = new javax.swing.JButton();
        A3 = new javax.swing.JButton();
        B3 = new javax.swing.JButton();
        C3 = new javax.swing.JButton();
        D3 = new javax.swing.JButton();
        E3 = new javax.swing.JButton();
        F3 = new javax.swing.JButton();
        G3 = new javax.swing.JButton();
        H3 = new javax.swing.JButton();
        A2 = new javax.swing.JButton();
        B2 = new javax.swing.JButton();
        C2 = new javax.swing.JButton();
        D2 = new javax.swing.JButton();
        E2 = new javax.swing.JButton();
        F2 = new javax.swing.JButton();
        G2 = new javax.swing.JButton();
        H2 = new javax.swing.JButton();
        A1 = new javax.swing.JButton();
        B1 = new javax.swing.JButton();
        C1 = new javax.swing.JButton();
        D1 = new javax.swing.JButton();
        E1 = new javax.swing.JButton();
        F1 = new javax.swing.JButton();
        G1 = new javax.swing.JButton();
        H1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        Fichas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Dama", "Rey", "Torre", "Alfil", "Caballo", "Peon" }));
        Fichas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FichasActionPerformed(evt);
            }
        });
        getContentPane().add(Fichas, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, -1, -1));

        Tablero.setLayout(new java.awt.GridLayout(8, 8));

        A8.setBackground(new java.awt.Color(102, 102, 102));
        A8.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(A8);

        B8.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(B8);

        C8.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(C8);

        D8.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(D8);

        E8.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(E8);

        F8.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(F8);

        G8.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(G8);

        H8.setForeground(new java.awt.Color(0, 0, 0));
        H8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H8ActionPerformed(evt);
            }
        });
        Tablero.add(H8);

        A7.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(A7);

        B7.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(B7);

        C7.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(C7);

        D7.setForeground(new java.awt.Color(0, 0, 0));
        D7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D7ActionPerformed(evt);
            }
        });
        Tablero.add(D7);

        E7.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(E7);

        F7.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(F7);

        G7.setForeground(new java.awt.Color(0, 0, 0));
        G7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G7ActionPerformed(evt);
            }
        });
        Tablero.add(G7);

        H7.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(H7);

        A6.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(A6);

        B6.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(B6);

        C6.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(C6);

        D6.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(D6);

        E6.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(E6);

        F6.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(F6);

        G6.setForeground(new java.awt.Color(0, 0, 0));
        G6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G6ActionPerformed(evt);
            }
        });
        Tablero.add(G6);

        H6.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(H6);

        A5.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(A5);

        B5.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(B5);

        C5.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(C5);

        D5.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(D5);

        E5.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(E5);

        F5.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(F5);

        G5.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(G5);

        H5.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(H5);

        A4.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(A4);

        B4.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(B4);

        C4.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(C4);

        D4.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(D4);

        E4.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(E4);

        F4.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(F4);

        G4.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(G4);

        H4.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(H4);

        A3.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(A3);

        B3.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(B3);

        C3.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(C3);

        D3.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(D3);

        E3.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(E3);

        F3.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(F3);

        G3.setForeground(new java.awt.Color(0, 0, 0));
        G3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G3ActionPerformed(evt);
            }
        });
        Tablero.add(G3);

        H3.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(H3);

        A2.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(A2);

        B2.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(B2);

        C2.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(C2);

        D2.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(D2);

        E2.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(E2);

        F2.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(F2);

        G2.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(G2);

        H2.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(H2);

        A1.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(A1);

        B1.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(B1);

        C1.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(C1);

        D1.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(D1);

        E1.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(E1);

        F1.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(F1);

        G1.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(G1);

        H1.setForeground(new java.awt.Color(0, 0, 0));
        Tablero.add(H1);

        getContentPane().add(Tablero, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 440, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    public GUI(JButton A1, JButton A2, JButton A3, JButton A4, JButton A5, JButton A6, JButton A7, JButton A8, JButton B1, JButton B2, JButton B3, JButton B4, JButton B5, JButton B6, JButton B7, JButton B8, JButton C1, JButton C2, JButton C3, JButton C4, JButton C5, JButton C6, JButton C7, JButton C8, JButton D1, JButton D2, JButton D3, JButton D4, JButton D5, JButton D6, JButton D7, JButton D8, JButton E1, JButton E2, JButton E3, JButton E4, JButton E5, JButton E6, JButton E7, JButton E8, JButton F1, JButton F2, JButton F3, JButton F4, JButton F5, JButton F6, JButton F7, JButton F8, JComboBox<String> Fichas, JButton G1, JButton G2, JButton G3, JButton G4, JButton G5, JButton G6, JButton G7, JButton G8, JButton H1, JButton H2, JButton H3, JButton H4, JButton H5, JButton H6, JButton H7, JButton H8, JPanel Tablero, JLabel jLabel1) throws HeadlessException {
        this.A1 = A1;
        this.A2 = A2;
        this.A3 = A3;
        this.A4 = A4;
        this.A5 = A5;
        this.A6 = A6;
        this.A7 = A7;
        this.A8 = A8;
        this.B1 = B1;
        this.B2 = B2;
        this.B3 = B3;
        this.B4 = B4;
        this.B5 = B5;
        this.B6 = B6;
        this.B7 = B7;
        this.B8 = B8;
        this.C1 = C1;
        this.C2 = C2;
        this.C3 = C3;
        this.C4 = C4;
        this.C5 = C5;
        this.C6 = C6;
        this.C7 = C7;
        this.C8 = C8;
        this.D1 = D1;
        this.D2 = D2;
        this.D3 = D3;
        this.D4 = D4;
        this.D5 = D5;
        this.D6 = D6;
        this.D7 = D7;
        this.D8 = D8;
        this.E1 = E1;
        this.E2 = E2;
        this.E3 = E3;
        this.E4 = E4;
        this.E5 = E5;
        this.E6 = E6;
        this.E7 = E7;
        this.E8 = E8;
        this.F1 = F1;
        this.F2 = F2;
        this.F3 = F3;
        this.F4 = F4;
        this.F5 = F5;
        this.F6 = F6;
        this.F7 = F7;
        this.F8 = F8;
        this.Fichas = Fichas;
        this.G1 = G1;
        this.G2 = G2;
        this.G3 = G3;
        this.G4 = G4;
        this.G5 = G5;
        this.G6 = G6;
        this.G7 = G7;
        this.G8 = G8;
        this.H1 = H1;
        this.H2 = H2;
        this.H3 = H3;
        this.H4 = H4;
        this.H5 = H5;
        this.H6 = H6;
        this.H7 = H7;
        this.H8 = H8;
        this.Tablero = Tablero;
        this.jLabel1 = jLabel1;
    }
    
private void inicializarMatrizBotones() {
    matrizBotones = new JButton[8][8];
    Component[] componentes = Tablero.getComponents();
    int index = 0;
    for (int fila = 0; fila < 8; fila++) {
        for (int columna = 0; columna < 8; columna++) {
            matrizBotones[fila][columna] = (JButton) componentes[index];
            index++;
            
            final int f = fila;  // Crear variables finales para las filas y columnas actuales
            final int c = columna;
            
            matrizBotones[fila][columna].addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    // Lógica para manejar la acción cuando se pulsa un botón
                    System.out.println("Boton en fila " + f + ", columna " + c + " fue pulsado.");

                    // Aquí puedes añadir la lógica específica para cada botón
                    if (f == 0 && c == 0) {
                        // Lógica para el botón en la esquina superior izquierda (A1)
                        System.out.println("Lógica específica para el botón (0, 0)");
                    } else if (f == 1 && c == 0) {
                        // Lógica para el botón en la segunda fila, primera columna (A2)
                        System.out.println("Lógica específica para el botón (1, 0)");
                    }
                    // Y así sucesivamente para otros botones según sus posiciones
                }
            });
        }
    }
}

    private void FichasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FichasActionPerformed
         Color color_tablero = new Color(255, 255, 255);
    String item = (String) Fichas.getSelectedItem();
    if (item.equals("Dama")) {
        color_tablero = Color.BLACK;
    }
    
    // Limpiar colores anteriores
    for (int fila = 0; fila < 8; fila++) {
        for (int columna = 0; columna < 8; columna++) {
            matrizBotones[fila][columna].setBackground(color_tablero);
        }
    }
    
    int[][] movimientos = new int[0][2];
    
    // Obtener los movimientos según la pieza seleccionada
    switch(item) {
        case "Dama":
            movimientos = dama_mov(new String[8][8], 3, 3); // Cambia las coordenadas según la posición deseada
            break;
        case "Peon":
            movimientos = peon_mov(new String[8][8], 3, 3); // Agrega la función peon_mov con lógica específica
            break;
        case "Caballo":
            movimientos = caballo_mov(new String[8][8], 3, 3);
            break;
        case "Alfil":
            movimientos = alfil_mov(new String[8][8], 3, 3);
            break;
        case "Rey":
            movimientos = rey_mov(new String[8][8], 3, 3); // Agrega la función rey_mov con lógica específica
            break;
        case "Torre":
            movimientos = torre_mov(new String[8][8], 3, 3);
            break;
    }
    
    // Marcar posibles movimientos en el tablero
    for (int[] movimiento : movimientos) {
        matrizBotones[movimiento[0]][movimiento[1]].setBackground(Color.GREEN);
    }
    }//GEN-LAST:event_FichasActionPerformed

    private void D7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_D7ActionPerformed

    private void G7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_G7ActionPerformed

    private void G6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_G6ActionPerformed

    private void G3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_G3ActionPerformed

    private void H8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_H8ActionPerformed

    public static int[][] alfil_mov(String[][] tablero, int row, int col) {
        int[][] direcciones = { { -1, -1 }, { -1, 1 }, { 1, -1 }, { 1, 1 } };
        int[][] movimientos = new int[64][2];
        int count = 0;

        for (int[] direccion : direcciones) {
            int fila = row;
            int columna = col;

            while (true) {
                fila += direccion[0];
                columna += direccion[1];
                if (fila >= 0 && fila < 8 && columna >= 0 && columna < 8) {
                    if (tablero[fila][columna] == null) {
                        movimientos[count][0] = fila;
                        movimientos[count][1] = columna;
                        count++;
                    } else {
                        break;
                    }
                } else {
                    break;
                }
            }
        }
        int[][] movimientos_v = new int[count][2];
        for (int i = 0; i < count; i++) {
            movimientos_v[i][0] = movimientos[i][0];
            movimientos_v[i][1] = movimientos[i][1];
        }
        return movimientos_v;
    }

        public static int[][] caballo_mov(String[][] tablero, int row, int col) {
        int[][] direcciones_saltos = { { -2, -1 },
                { -2, 1 },
                { 1, -2 },
                { 1, 2 },
                { -1, -2 },
                { -1, 2 },
                { 2, -1 },
                { 2, 1 } };
        int[][] movimientos = new int[64][2];
        int count = 0;

        for (int[] direccion : direcciones_saltos) {
            int fila = row;
            int columna = col;

            while (true) {
                fila += direccion[0];
                columna += direccion[1];
                if (fila >= 0 && fila < 8 && columna >= 0 && columna < 8) {
                    if (tablero[fila][columna] == null) {
                        movimientos[count][0] = fila;
                        movimientos[count][1] = columna;
                        count++;
                        break;
                    } else {
                        break;
                    }
                } else {
                    break;
                }
            }

        }

        int[][] movimientos_v = new int[count][2];
        for (int i = 0; i < count; i++) {
            movimientos_v[i][0] = movimientos[i][0];
            movimientos_v[i][1] = movimientos[i][1];
        }
        return movimientos_v;
    }

    public static int[][] torre_mov(String[][] tablero, int row, int col) {
        int[][] direcciones = { { -1, 0 }, { 0, 1 }, { 0, -1 }, { 1, 0 } };
        int[][] movimientos = new int[64][2];
        int count = 0;

        for (int[] direccion : direcciones) {
            int fila = row;
            int columna = col;

            while (true) {
                fila += direccion[0];
                columna += direccion[1];
                if (fila >= 0 && fila < 8 && columna >= 0 && columna < 8) {
                    if (tablero[fila][columna] == null) {
                        movimientos[count][0] = fila;
                        movimientos[count][1] = columna;
                        count++;
                    } else {
                        break;
                    }
                } else {
                    break;
                }
            }
        }
        int[][] movimientos_v = new int[count][2];
        for (int i = 0; i < count; i++) {
            movimientos_v[i][0] = movimientos[i][0];
            movimientos_v[i][1] = movimientos[i][1];
        }
        return movimientos_v;
    }

    public static int[][] dama_mov(String[][] tablero, int row, int col) {

        int[][] direcciones = { { -1, -1 }, { -1, 1 }, { 1, -1 }, { 1, 1 }, { -1, 0 }, { 0, 1 }, { 0, -1 }, { 1, 0 } };
        int[][] movimientos = new int[64][2];
        int count = 0;

        for (int[] direccion : direcciones) {
            int fila = row;
            int columna = col;

            while (true) {
                fila += direccion[0];
                columna += direccion[1];
                if (fila >= 0 && fila < 8 && columna >= 0 && columna < 8) {
                    if (tablero[fila][columna] == null) {
                        movimientos[count][0] = fila;
                        movimientos[count][1] = columna;
                        count++;
                    } else {
                        break;
                    }
                } else {
                    break;
                }
            }
        }
        int[][] movimientos_v = new int[count][2];
        for (int i = 0; i < count; i++) {
            movimientos_v[i][0] = movimientos[i][0];
            movimientos_v[i][1] = movimientos[i][1];
        }
        return movimientos_v;
    }

    public static int[][] rey_mov(String[][] tablero, int row, int col) {

        int[][] direcciones = { { -1, -1 }, { -1, 1 }, { 1, -1 }, { 1, 1 }, { -1, 0 }, { 0, 1 }, { 0, -1 }, { 1, 0 } };
        int[][] movimientos = new int[64][2];
        int count = 0;

        for (int[] direccion : direcciones) {
            int fila = row;
            int columna = col;

            while (true) {
                fila += direccion[0];
                columna += direccion[1];
                if (fila >= 0 && fila < 8 && columna >= 0 && columna < 8) {
                    if (tablero[fila][columna] == null) {
                        movimientos[count][0] = fila;
                        movimientos[count][1] = columna;
                        count++;
                        break;
                    } else {
                        break;
                    }
                } else {
                    break;
                }
            }
        }
        int[][] movimientos_v = new int[count][2];
        for (int i = 0; i < count; i++) {
            movimientos_v[i][0] = movimientos[i][0];
            movimientos_v[i][1] = movimientos[i][1];
        }
        return movimientos_v;
    }

    public static int[][] peon_mov(String[][] tablero, int row, int col) {

        int[][] movimientos = new int[64][2];
        int count = 0;

        int fila = row;
        int columna = col;

        while (true) {
            fila += -1;
            columna += 0;
            if (fila >= 0 && fila < 8 && columna >= 0 && columna < 8) {
                if (tablero[fila][columna] == null) {
                    movimientos[count][0] = fila;
                    movimientos[count][1] = columna;
                    count++;
                    break;
                } else {
                    break;
                }
            } else {
                break;
            }
        }
        int[][] movimientos_v = new int[count][2];
        for (int i = 0; i < count; i++) {
            movimientos_v[i][0] = movimientos[i][0];
            movimientos_v[i][1] = movimientos[i][1];
        }
        return movimientos_v;
    }

    public static void imprimirTablero(String[][] tablero) {
        for (int i = 0; i < tablero.length; i++) {
            for (int j = 0; j < tablero[i].length; j++) {
                if (tablero[i][j] == null) {
                    System.out.print(". ");
                } else {
                    System.out.print(tablero[i][j] + " ");
                }
            }
            System.out.println();
        }
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {    

        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);

            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A1;
    private javax.swing.JButton A2;
    private javax.swing.JButton A3;
    private javax.swing.JButton A4;
    private javax.swing.JButton A5;
    private javax.swing.JButton A6;
    private javax.swing.JButton A7;
    private javax.swing.JButton A8;
    private javax.swing.JButton B1;
    private javax.swing.JButton B2;
    private javax.swing.JButton B3;
    private javax.swing.JButton B4;
    private javax.swing.JButton B5;
    private javax.swing.JButton B6;
    private javax.swing.JButton B7;
    private javax.swing.JButton B8;
    private javax.swing.JButton C1;
    private javax.swing.JButton C2;
    private javax.swing.JButton C3;
    private javax.swing.JButton C4;
    private javax.swing.JButton C5;
    private javax.swing.JButton C6;
    private javax.swing.JButton C7;
    private javax.swing.JButton C8;
    private javax.swing.JButton D1;
    private javax.swing.JButton D2;
    private javax.swing.JButton D3;
    private javax.swing.JButton D4;
    private javax.swing.JButton D5;
    private javax.swing.JButton D6;
    private javax.swing.JButton D7;
    private javax.swing.JButton D8;
    private javax.swing.JButton E1;
    private javax.swing.JButton E2;
    private javax.swing.JButton E3;
    private javax.swing.JButton E4;
    private javax.swing.JButton E5;
    private javax.swing.JButton E6;
    private javax.swing.JButton E7;
    private javax.swing.JButton E8;
    private javax.swing.JButton F1;
    private javax.swing.JButton F2;
    private javax.swing.JButton F3;
    private javax.swing.JButton F4;
    private javax.swing.JButton F5;
    private javax.swing.JButton F6;
    private javax.swing.JButton F7;
    private javax.swing.JButton F8;
    private javax.swing.JComboBox<String> Fichas;
    private javax.swing.JButton G1;
    private javax.swing.JButton G2;
    private javax.swing.JButton G3;
    private javax.swing.JButton G4;
    private javax.swing.JButton G5;
    private javax.swing.JButton G6;
    private javax.swing.JButton G7;
    private javax.swing.JButton G8;
    private javax.swing.JButton H1;
    private javax.swing.JButton H2;
    private javax.swing.JButton H3;
    private javax.swing.JButton H4;
    private javax.swing.JButton H5;
    private javax.swing.JButton H6;
    private javax.swing.JButton H7;
    private javax.swing.JButton H8;
    private javax.swing.JPanel Tablero;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
